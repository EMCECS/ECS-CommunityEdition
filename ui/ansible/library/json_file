#!/usr/bin/env python

'''
Derived from: https://github.com/FauxFaux/ansible-ghetto-json

The MIT License (MIT)

Copyright (c) 2015

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
'''

import json
import sys
import shlex

try:
    import commentjson
    json_load = commentjson.load
except ImportError:
    json_load = json.load

def main(params_list):
    params = dict(x.split("=", 2) for x in params_list)
    path = params.pop('path')
    changed = False

    with open(path) as f:
        obj = json_load(f)
        for (key, target) in params.items():
            parts = key.split('.')
            ref = obj
            for part in parts[:-1]:
                if part not in ref:
                    ref[part] = {}
                ref = ref[part]

            last_part = parts[-1]
            if target == 'unset':
                if last_part in ref:
                    del ref[last_part]
                    changed = True
            else:
                if target.isdigit():
                    target = int(target)
                if target == 'null':
                    target = None
                if target == 'false':
                    target = False
                if target == 'true':
                    target = True
                if last_part not in ref or ref[last_part] != target:
                    ref[last_part] = target
                    changed = True

    if changed:
        with open(path, 'w') as f:
            json.dump(obj, f, indent=2, separators=(',', ': '), sort_keys=True)

    print(json.dumps({'changed': changed}))


if __name__ == '__main__':
    if len(sys.argv) == 2:
        main(shlex.split(open(sys.argv[1]).read()))
    else:
        main(sys.argv[1:])
