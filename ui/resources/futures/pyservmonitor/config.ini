# author: deadc0de6
# contact: https://github.com/deadc0de6
#
# this is the config file read by servmonitor.py
# each line describe an entry in the menu
#
# Copyright (C) 2014 deadc0de6
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# each line has to have this form:
#     '<name>':'<menu-entry-text>':'<bash-one-liner>'
# a line starting with # is ignored
#
# be aware that
#   all fields have to be enclosed into single quotes (')
#   single quotes have to be escaped with backslash (\)
#   backslash (\) have to be doubled (\\)
#
# feel free to construct a specific one for your server
# and provide it using the --config to servmonitor.py
# per default it takes config.ini as the config file
#
# edit the TODO

# these are the basics
'users':'users':'last'
'w':'current user(s)':'w'
'du':'disk usage':'df -h'
'pstree':'pstree':'pstree'
'dmesg':'dmesg (most recent on top)':'dmesg -T |tac'
'syslog':'syslog (most recent on top)':'sudo cat /var/log/syslog | tac'
'iptables':'iptables rules':'sudo iptables-save'
'ip6tables':'ip6tables rules IPv6':'sudo ip6tables-save'
'open ports':'open ports':'sudo lsof -i -n | grep -i listen | awk \'{print $1 " " $8"/"$9}\' | sort | uniq'

# apache
'apache':'[apache] access stats':'cat /var/log/apache2/access.log | grep GET | sed \'s/ - .*//g\'| sort | uniq -c | sort -n | tac'
'apache':'[apache] last access':'sudo cat /var/log/apache2/access.log | grep GET | tail | sed \'s/HTTP.*$/\.\.\./g\' | tac'
'apache':'[apache] hourly access':'awk -F: \'{print $2}\' /var/log/apache2/access.log | sort | uniq -c'

# nginx
'nginx':'[nginx] access stats':'cat /var/log/nginx/access.log | grep GET | sed \'s/ - .*//g\'| sort | uniq -c | sort -n | tac'
'nginx':'[nginx] last access':'sudo cat /var/log/nginx/access.log | grep GET | tail | sed \'s/HTTP.*$/\.\.\./g\' | tac'
'nginx':'[nginx] hourly access':'awk -F: \'{print $2}\' /var/log/nginx/access.log | sort | uniq -c'

# fail2ban
'fail2ban':'[fail2ban] jail stats':'for s in `sudo fail2ban-client -v status | grep \'Jail list\' | sed -e \'s/^.*://g\' -e \'s/^\t\t//g\' -e \'s/, / /g\'`; do sudo fail2ban-client status $s; done|tr \'\\t\' \' \''
'fail2ban':'[fail2ban] banned IP(s)':'for file in `ls /var/log/fail2ban*`; do ext=${file##*.}; if [ "$ext" = "gz" ]; then sudo zcat $file | grep \'Ban\\|Unban\'; else sudo cat $file | grep \'Ban\\|Unban\'; fi; done | sort -k1 -t\' \' -n | tac'

# portspoof
'portspoof':'[portspoof] most attacked port(s)':'sudo cat TODO/portspoof.log | grep SIGNATURE_SEND | sed \'s/^.*://g\' | sort | uniq -c | sort -n | tail -$qty | tac'
'portspoof':'[portspoof] top 10 attacking IP(s)':'sudo cat TODO/portspoof.log | grep SIGNATURE_SEND | sed \'s/^.*source_ip:\\([^ ]*\\) .*$/\\1/g\' | sort | uniq -c | sort -n | tail -10 | tac'
'portspoof':'[portspoof] last attempts':'sudo cat TODO/portspoof.log | tail -20 | while read i; do d=`echo $i | cut -f1 -d\' \'`; echo "`date -d @$d` # $i"; done | tac'

# ssh
'ssh':'[SSH] last access':'sudo cat /var/log/auth.log | grep sshd | grep -v pam | tail | tac'

# kippo
'kippo':'[Kippo] last login attempts':'cat TODO/kippo.log | grep \'login attempt\' | tail | tac'
'kippo':'[Kippo] top 20 passwords':'cat TODO/kippo.log* | grep \'login attempt\' | sed -e \'s/^.*root\\///g\' -e \'s/].*$//g\' | sort | uniq -c | sort -n | tail -20 | sort -rn'

# sensors
'sensors':'[temp] sensors':'sensors'

# cron logs
'cron':'[cron] logs':'sudo cat /var/log/syslog | grep CRON | tac'

# zfs
'zfs':'[zfs] list pool':'sudo zpool list'
'zfs':'[zfs] pool iostat':'sudo zpool iostat -v'
'zfs':'[zfs] list snapshots':'sudo zfs list -t snapshot'

# libvirt
'libvirt':'[libvirt] logs':'sudo cat /var/log/libvirt/libvirtd.log'

# docker
'docker':'[docker] info':'python -c \'from libdocker import dockerapi; r = dockerapi(); r.connect(); print r.get_docker_info(); r.disconnect()\''
'docker':'[docker] images':'python -c \'from libdocker import dockerapi; r = dockerapi(); r.connect(); print r.get_images_info(); r.disconnect()\''
'docker':'[docker] containers':'python -c \'from libdocker import dockerapi; r = dockerapi(); r.connect(); print r.get_containers_info(); r.disconnect()\''
'docker':'[docker] containers details':'python -c \'from libdocker import dockerapi; r = dockerapi(); r.connect(); print r.get_conts_details(); r.disconnect()\''
'docker':'[docker] containers logs':'python -c \'from libdocker import dockerapi; r = dockerapi(); r.connect(); print r.get_conts_log(); r.disconnect()\''

