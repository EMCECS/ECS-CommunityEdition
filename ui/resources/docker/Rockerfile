# Copyright (c) 2015 EMC Corporation
# All Rights Reserved
#
# This software contains the intellectual property of EMC Corporation
# or is licensed to EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of EMC.

FROM {{ .FromImage }}
MAINTAINER Travis Wichert <travis.wichert@emc.com>
ENV ANSIBLE_CONFIG="/etc/ansible/ansible.cfg"
ENV ANSIBLE_HOSTS="/usr/local/src/ui/inventory.py"

COPY ui/resources/docker/ecs-install-requirements.txt /etc/ecs-install-requirements.txt
COPY ui/resources/docker/apk-repositories /etc/apk/repositories

ENV http_proxy={{ .HTTPProxy }}
ENV pip_proxy={{ .PipProxy }}

RUN apk -q --no-cache upgrade \
    && apk -q --no-cache add openssh-client sshpass openssl ca-certificates libffi libressl@edge_main \
                             make pigz jq less \
                             opentracker aria2 mktorrent@edge_community \
                             ansible \
    && mv /etc/profile.d/color_prompt /etc/profile.d/color_prompt.sh \
    && ln -s /usr/local/src/ui/ansible /ansible \
    && ln -s /usr/local/src/ui /ui \
    && ln -s /usr/local/src /src \
    && mkdir -p /var/run/opentracker \
    && chown nobody:nobody /var/run/opentracker

RUN apk -q --no-cache add --virtual .build-deps musl-dev libffi-dev \
                       openssl-dev linux-headers git gcc git-perl \
    && if ! [ -z "$pip_proxy" ]; then \
            export pip_proxy="--proxy $pip_proxy" && \
            git config --global http.proxy "$http_proxy" \
       ;fi \
    && pip install -q $pip_proxy --no-cache-dir -r /etc/ecs-install-requirements.txt \
    && apk -q --no-cache --purge del .build-deps

COPY ui/resources/docker/torrent.sh /usr/local/bin/torrent.sh

RUN mkdir -p /etc/ansible
COPY ui/resources/docker/ansible.cfg /etc/ansible/ansible.cfg

COPY ui/resources/docker/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh
ENTRYPOINT [ "/usr/local/bin/entrypoint.sh" ]

COPY {{ .UIArtifact }} /usr/local/src/ui.tgz
# Currently using the Ansible apk.
# COPY {{ .AnsibleArtifact }} /usr/local/src/ansible.tgz

# Unset proxies after build
ENV http_proxy=

VOLUME [ "/opt", "/usr/local", "/var/log", "/root", "/etc" ]

LABEL VERSION={{ .Version }}
ENV VERSION={{ .Version }}
TAG {{ .Version }}
PUSH {{ .BuildPush }}
